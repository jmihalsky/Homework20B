{"ast":null,"code":"import _defineProperty from \"/Users/jeff/Documents/UCD_Bootcamp/Homework20B/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/jeff/Documents/UCD_Bootcamp/Homework20B/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jeff/Documents/UCD_Bootcamp/Homework20B/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jeff/Documents/UCD_Bootcamp/Homework20B/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jeff/Documents/UCD_Bootcamp/Homework20B/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jeff/Documents/UCD_Bootcamp/Homework20B/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jeff/Documents/UCD_Bootcamp/Homework20B/client/src/pages/BookSearch.js\";\nimport React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport BookResults from \"../components/bookresults\";\nimport SearchBar from \"../components/searchbar\";\n\nvar BookSearch =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BookSearch, _Component);\n\n  function BookSearch() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BookSearch);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BookSearch)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      search: \"\",\n      results: [],\n      error: \"\",\n      good: false\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleBookSearch = function (event) {\n      API.searchBook(_this.state.search).then(function (res) {\n        console.log(res.data);\n\n        _this.setState({\n          results: res.data.items,\n          good: true\n        });\n      }).catch(function (err) {\n        return _this.setState({\n          error: err\n        });\n      });\n    };\n\n    _this.handleRenderingResults = function () {\n      if (_this.state.results) {\n        console.log(_this.state);\n\n        var newArray = _this.state.results.map(function (b) {\n          var authors = b.volumeInfo.authors;\n          var title = b.volumeInfo.title;\n          var publisher = b.volumeInfo.publisher;\n          var thumbnail = b.volumeInfo.imageLinks.thumbnail;\n          var description = b.volumeInfo.description;\n          var link = b.volumeInfo.canonicalVolumeLink;\n          return React.createElement(BookResults, {\n            handleSavingBooks: _this.handleSavingBooks,\n            key: title,\n            authors: authors,\n            title: title,\n            publisher: publisher,\n            thumbnail: thumbnail,\n            description: description,\n            link: link,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          });\n        });\n\n        return newArray;\n      } else {\n        _this.handleEmptyResults();\n      }\n    };\n\n    _this.handleEmptyResults = function () {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"No Books Found\")));\n    };\n\n    _this.handleSavingBooks = function (authors, title, publisher, thumbnail, description, link) {\n      var newBook = {\n        authors: authors,\n        title: title,\n        publisher: publisher,\n        thumbnail: thumbnail,\n        description: description,\n        link: link\n      };\n      API.saveBook(newBook).then(function (res) {\n        console.log(res);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BookSearch, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(SearchBar, {\n        handleBookSearch: this.handleBookSearch,\n        handleInputChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), !this.state.results.length ? this.handleEmptyResults() : this.handleRenderingResults());\n    }\n  }]);\n\n  return BookSearch;\n}(Component);\n\nexport { BookSearch as default };","map":{"version":3,"sources":["/Users/jeff/Documents/UCD_Bootcamp/Homework20B/client/src/pages/BookSearch.js"],"names":["React","Component","API","Jumbotron","BookResults","SearchBar","BookSearch","state","search","results","error","good","handleInputChange","event","target","name","value","setState","handleBookSearch","searchBook","then","res","console","log","data","items","catch","err","handleRenderingResults","newArray","map","b","authors","volumeInfo","title","publisher","thumbnail","imageLinks","description","link","canonicalVolumeLink","handleSavingBooks","handleEmptyResults","newBook","saveBook","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport BookResults from \"../components/bookresults\";\nimport SearchBar from \"../components/searchbar\";\n\nexport default class BookSearch extends Component {\n    state = {\n        search: \"\",\n        results: [],\n        error: \"\",\n        good: false\n    };\n\n    handleInputChange = (event) => {\n        const {name, value } = event.target;\n        this.setState({ [name]: value});\n    }\n\n    handleBookSearch = (event) => {\n        API.searchBook(this.state.search).then((res) => {\n            console.log(res.data);\n            this.setState({results: res.data.items, good: true});\n        }).catch(err => this.setState({error: err}));\n    }\n\n    handleRenderingResults = () => {\n        if (this.state.results) {\n            console.log(this.state)\n            var newArray = this.state.results.map(b => {\n                var authors = b.volumeInfo.authors;\n                var title = b.volumeInfo.title;\n                var publisher = b.volumeInfo.publisher;\n                var thumbnail = b.volumeInfo.imageLinks.thumbnail;\n                var description = b.volumeInfo.description;\n                var link = b.volumeInfo.canonicalVolumeLink;\n                return <BookResults handleSavingBooks={this.handleSavingBooks} key={title} authors={authors} title={title} publisher={publisher} thumbnail={thumbnail} description={description} link={link}/> \n            })\n            return newArray;\n        }\n        else\n        {\n            this.handleEmptyResults();\n        }\n    }\n\n    handleEmptyResults = () => {\n        return <div><Jumbotron><h2>No Books Found</h2></Jumbotron></div>\n    }\n\n    handleSavingBooks = (authors, title, publisher, thumbnail, description, link) => {\n        var newBook = {\n            authors: authors,\n            title: title,\n            publisher: publisher,\n            thumbnail: thumbnail,\n            description: description,\n            link: link\n        };\n        API.saveBook(newBook).then(res => {\n            console.log(res);\n        })\n    }\n\n    render() {\n        return(\n            <div>\n                <SearchBar handleBookSearch={this.handleBookSearch} handleInputChange={this.handleInputChange}/>\n                {!this.state.results.length ? this.handleEmptyResults() : this.handleRenderingResults()}\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}